// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace packet
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct request_login : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static request_login GetRootAsrequest_login(ByteBuffer _bb) { return GetRootAsrequest_login(_bb, new request_login()); }
  public static request_login GetRootAsrequest_login(ByteBuffer _bb, request_login obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public request_login __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int UserNo { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string UserName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUserNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetUserNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetUserNameArray() { return __p.__vector_as_array<byte>(6); }
  public string UserPwd { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUserPwdBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetUserPwdBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetUserPwdArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<packet.request_login> Createrequest_login(FlatBufferBuilder builder,
      int user_no = 0,
      StringOffset user_nameOffset = default(StringOffset),
      StringOffset user_pwdOffset = default(StringOffset)) {
    builder.StartTable(3);
    request_login.AddUserPwd(builder, user_pwdOffset);
    request_login.AddUserName(builder, user_nameOffset);
    request_login.AddUserNo(builder, user_no);
    return request_login.Endrequest_login(builder);
  }

  public static void Startrequest_login(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddUserNo(FlatBufferBuilder builder, int userNo) { builder.AddInt(0, userNo, 0); }
  public static void AddUserName(FlatBufferBuilder builder, StringOffset userNameOffset) { builder.AddOffset(1, userNameOffset.Value, 0); }
  public static void AddUserPwd(FlatBufferBuilder builder, StringOffset userPwdOffset) { builder.AddOffset(2, userPwdOffset.Value, 0); }
  public static Offset<packet.request_login> Endrequest_login(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 6);  // user_name
    builder.Required(o, 8);  // user_pwd
    return new Offset<packet.request_login>(o);
  }
}


}
